// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	"github.com/evmos/evmos-ledger-go/ledger"
	mock "github.com/stretchr/testify/mock"
)

// Secp256k1DerivationFn is an autogenerated mock type for the Secp256k1DerivationFn type
type Secp256k1DerivationFn struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *Secp256k1DerivationFn) Execute() (ledger.SECP256K1, error) {
	ret := _m.Called()

	var r0 ledger.SECP256K1
	if rf, ok := ret.Get(0).(func() ledger.SECP256K1); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ledger.SECP256K1)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSecp256k1DerivationFn interface {
	mock.TestingT
	Cleanup(func())
}

// NewSecp256k1DerivationFn creates a new instance of Secp256k1DerivationFn. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSecp256k1DerivationFn(t mockConstructorTestingTNewSecp256k1DerivationFn) *Secp256k1DerivationFn {
	mock := &Secp256k1DerivationFn{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
